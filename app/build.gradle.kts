/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "1.6.21"
    id "org.sonarqube"
    // Apply the application plugin to add support for building a CLI application in Java.
}


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

buildscript{

dependencies {

classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0" }

}

dependencies {
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:31.0.1-jre")

}

testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            // Use Kotlin Test test framework
            useKotlinTest()
        }
    }
}

sonarqube {

properties {

property “sonar.projectName”, “TestApp”

property “sonar.projectKey”, “TestApp”

property “sonar.host.url”, “http://localhost:9000"

property “sonar.language”, “kotlin”

property “sonar.sources”, “src/main/kotlin”

property “sonar.sourceEncoding”, “UTF-8”

property “sonar.login”, “admin”

property “sonar.password”, “admin”

#property “sonar.coverage.exclusions”, “src/androidTest/java“

}

application {
    // Define the main class for the application.
    mainClass.set("demo.AppKt")
}
